name: Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - '.vscode/**'
      - '.idea/**'
  workflow_dispatch:
    inputs:
      production-release:
        description: 'Production release?'
        required: true
        default: 'true'

concurrency: create-release

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  packages: read

jobs:
  ci:
    if: false
    name: CI
    uses: makerxstudio/shared-config/.github/workflows/node-ci.yml@main
    with:
      working-directory: .
      node-version: 20.x
      audit-script: npm run audit
      compile-script: npm run check-types
      test-script: npm run tests

  build-website:
    if: false
    name: Build Website
    uses: makerxstudio/shared-config/.github/workflows/node-build-zip.yml@main
    with:
      node-version: 20.x
      build-path: dist
      artifact-name: website
      static-site: true
      static-site-env-prefix: VITE
    needs:
      - ci

  create-release:
    runs-on: [ubuntu-20.04]
    name: Create release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create release
        id: create-release-action
        uses: ./.github/actions/create-release
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-release: ${{ github.ref_name == 'main' && inputs.production-release == 'true' }}
          node-version: 20

    outputs:
      release-published: ${{ steps.create-release-action.outputs.release-published }}
      release-version: ${{ steps.create-release-action.outputs.release-version }}
      release-id: ${{ steps.create-release-action.outputs.release-id }}

  build-tauri:
    name: Build Tauri app
    needs:
      - create-release
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-20.04]
    if: ${{ needs.create-release.outputs.release-published == 'true' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install npm dependencies
        run: npm install

      - name: Build for Linux
        id: build-linux
        if: ${{ runner.os == 'Linux' }}
        uses: ./.github/actions/build-linux
        with:
          release-version: ${{ needs.create-release.outputs.release-version }}
    outputs:
      linux-artifact-name: ${{ steps.build-linux.outputs.artifact-name }}

  publish:
    name: Publish
    needs:
      - create-release
      - build-tauri
    runs-on: [ubuntu-20.04]
    # if: ${{ inputs.production-release == 'true' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ needs.build-tauri.outputs.linux-artifact-name }}
          merge-multiple: true
          path: linux-artifacts

      - name: Publish Linux Snap
        if: ${{ runner.os == 'Linux' }}
        uses: ./.github/actions/publish-linux-snap
        with:
          release-version: ${{ needs.create-release.outputs.release-version }}
          artifacts-path: linux-artifacts
